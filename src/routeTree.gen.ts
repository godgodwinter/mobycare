/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutguestBlogImport } from './routes/_layout_guest/blog'
import { Route as LayoutLayoutBImport } from './routes/_layout/layout-b'
import { Route as LayoutLayoutAImport } from './routes/_layout/layout-a'
import { Route as LayoutAdminAdminSekolahImport } from './routes/_layout-admin/admin/sekolah'
import { Route as LayoutAdminAdminBookingbackupImport } from './routes/_layout-admin/admin/booking_backup'
import { Route as LayoutAdminAdminBookingImport } from './routes/_layout-admin/admin/booking'

// Create Virtual Routes

const ProfileLazyImport = createFileRoute('/profile')()
const LoginLazyImport = createFileRoute('/login')()
const DatatableLazyImport = createFileRoute('/datatable')()
const AboutLazyImport = createFileRoute('/about')()
const LayoutAdminLazyImport = createFileRoute('/_layout-admin')()
const LayoutLazyImport = createFileRoute('/_layout')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const DatatableLazyRoute = DatatableLazyImport.update({
  path: '/datatable',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/datatable.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LayoutAdminLazyRoute = LayoutAdminLazyImport.update({
  id: '/_layout-admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_layout-admin.lazy').then((d) => d.Route))

const LayoutLazyRoute = LayoutLazyImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_layout.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutguestBlogRoute = LayoutguestBlogImport.update({
  id: '/_layout_guest/blog',
  getParentRoute: () => rootRoute,
} as any)

const LayoutLayoutBRoute = LayoutLayoutBImport.update({
  path: '/layout-b',
  getParentRoute: () => LayoutLazyRoute,
} as any)

const LayoutLayoutARoute = LayoutLayoutAImport.update({
  path: '/layout-a',
  getParentRoute: () => LayoutLazyRoute,
} as any)

const LayoutAdminAdminSekolahRoute = LayoutAdminAdminSekolahImport.update({
  path: '/admin/sekolah',
  getParentRoute: () => LayoutAdminLazyRoute,
} as any)

const LayoutAdminAdminBookingbackupRoute =
  LayoutAdminAdminBookingbackupImport.update({
    path: '/admin/booking_backup',
    getParentRoute: () => LayoutAdminLazyRoute,
  } as any)

const LayoutAdminAdminBookingRoute = LayoutAdminAdminBookingImport.update({
  path: '/admin/booking',
  getParentRoute: () => LayoutAdminLazyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout-admin': {
      preLoaderRoute: typeof LayoutAdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/datatable': {
      preLoaderRoute: typeof DatatableLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/layout-a': {
      preLoaderRoute: typeof LayoutLayoutAImport
      parentRoute: typeof LayoutLazyImport
    }
    '/_layout/layout-b': {
      preLoaderRoute: typeof LayoutLayoutBImport
      parentRoute: typeof LayoutLazyImport
    }
    '/_layout_guest/blog': {
      preLoaderRoute: typeof LayoutguestBlogImport
      parentRoute: typeof rootRoute
    }
    '/_layout-admin/admin/booking': {
      preLoaderRoute: typeof LayoutAdminAdminBookingImport
      parentRoute: typeof LayoutAdminLazyImport
    }
    '/_layout-admin/admin/booking_backup': {
      preLoaderRoute: typeof LayoutAdminAdminBookingbackupImport
      parentRoute: typeof LayoutAdminLazyImport
    }
    '/_layout-admin/admin/sekolah': {
      preLoaderRoute: typeof LayoutAdminAdminSekolahImport
      parentRoute: typeof LayoutAdminLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  LayoutLazyRoute.addChildren([LayoutLayoutARoute, LayoutLayoutBRoute]),
  LayoutAdminLazyRoute.addChildren([
    LayoutAdminAdminBookingRoute,
    LayoutAdminAdminBookingbackupRoute,
    LayoutAdminAdminSekolahRoute,
  ]),
  AboutLazyRoute,
  DatatableLazyRoute,
  LoginLazyRoute,
  ProfileLazyRoute,
  LayoutguestBlogRoute,
])

/* prettier-ignore-end */
